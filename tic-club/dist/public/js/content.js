async function fetchContent(n){try{const t=await fetch(`/api/content/${n}`);if(!t.ok){const n=await t.json();throw new Error(n.message||"Failed to fetch content")}return await t.json()}catch(t){return console.error(`Error fetching ${n} content:`,t),[]}}async function updateAboutContent(){try{const n=await fetchContent("about"),t=document.getElementById("about-content");if(t&&n.length>0){const e=n[0];t.innerHTML=`\n                <h2>${e.title}</h2>\n                ${e.subtitle?`<h3>${e.subtitle}</h3>`:""}\n                <div class="content">${e.content}</div>\n            `}}catch(n){console.error("Error updating about content:",n)}}async function updateMissionContent(){try{const n=await fetchContent("mission"),t=document.getElementById("mission-content");if(t&&n.length>0){const e=n[0];t.innerHTML=`\n                <h2>${e.title}</h2>\n                ${e.subtitle?`<h3>${e.subtitle}</h3>`:""}\n                <div class="content">${e.content}</div>\n            `}}catch(n){console.error("Error updating mission content:",n)}}async function updateVisionContent(){try{const n=await fetchContent("vision"),t=document.getElementById("vision-content");if(t&&n.length>0){const e=n[0];t.innerHTML=`\n                <h2>${e.title}</h2>\n                ${e.subtitle?`<h3>${e.subtitle}</h3>`:""}\n                <div class="content">${e.content}</div>\n            `}}catch(n){console.error("Error updating vision content:",n)}}async function updateAchievements(){try{const n=await fetchContent("achievement"),t=document.getElementById("achievements-container");t&&(n.length>0?t.innerHTML=n.sort(((n,t)=>n.order-t.order)).map((n=>`\n                        <div class="achievement-card">\n                            ${n.image?`<img src="${n.image}" alt="${n.title}">`:""}\n                            <h3>${n.title}</h3>\n                            ${n.subtitle?`<h4>${n.subtitle}</h4>`:""}\n                            <p>${n.content}</p>\n                        </div>\n                    `)).join(""):t.innerHTML='<p class="text-center">No achievements to display</p>')}catch(n){console.error("Error updating achievements:",n)}}async function updateAnnouncements(){try{const n=await fetchContent("announcement"),t=document.getElementById("announcements-container");t&&(n.length>0?t.innerHTML=n.sort(((n,t)=>n.order-t.order)).map((n=>`\n                        <div class="announcement-card">\n                            ${n.image?`<img src="${n.image}" alt="${n.title}">`:""}\n                            <h3>${n.title}</h3>\n                            ${n.subtitle?`<h4>${n.subtitle}</h4>`:""}\n                            <p>${n.content}</p>\n                        </div>\n                    `)).join(""):t.innerHTML='<p class="text-center">No announcements to display</p>')}catch(n){console.error("Error updating announcements:",n)}}document.addEventListener("DOMContentLoaded",(async()=>{const n=[];document.getElementById("about-content")&&n.push(updateAboutContent()),document.getElementById("mission-content")&&n.push(updateMissionContent()),document.getElementById("vision-content")&&n.push(updateVisionContent()),document.getElementById("achievements-container")&&n.push(updateAchievements()),document.getElementById("announcements-container")&&n.push(updateAnnouncements()),await Promise.all(n)}));